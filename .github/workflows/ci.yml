name: CI
on:
  pull_request:

env:
  GO_VERSION: 1.17

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    steps:

    - name: Set up Go
      uses: actions/setup-go@v2
      with:
        go-version: ${{ env.GO_VERSION }}

    - shell: bash
      run: |
        sudo apt-get install libpcap-dev

    - name: Check out code
      uses: actions/checkout@v3

    - name: Verify spec aggregation and code generation
      run: make api3-verify

    - name: Set up QEMU
      uses: docker/setup-qemu-action@v1

    - name: Set up Docker Buildx
      id: buildx
      uses: docker/setup-buildx-action@v1

    - name: Check licenses
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      run: make license-check

    - name: Run verification
      run: make check

    - name: Get current timestamp
      id: timestamp
      run: echo "::set-output name=timestamp::$(date -u +'%Y-%m-%dT%H:%M:%SZ')"

    - name: Build APIClarity
      uses: docker/build-push-action@v2
      with:
        context: .
        platforms: linux/amd64,linux/arm64
        tags: ghcr.io/apiclarity/apiclarity:${{ github.sha }}
        file: Dockerfile
        cache-from: type=local,src=/tmp/.buildx-cache
        cache-to: type=local,dest=/tmp/.buildx-cache
        build-args: |
          VERSION=${{ github.sha }}
          BUILD_TIMESTAMP=${{ steps.timestamp.outputs.timestamp }}
          COMMIT_HASH=${{ github.sha }}

    - name: Build Kong plugin
      uses: docker/build-push-action@v2
      with:
        context: plugins
        platforms: linux/amd64,linux/arm64
        tags: ghcr.io/apiclarity/kong-plugin:${{ github.sha }}
        file: plugins/Dockerfile.kong
        cache-from: type=local,src=/tmp/.buildx-cache
        cache-to: type=local,dest=/tmp/.buildx-cache

    - name: Fix Tyk Plugin API dep
      id: tyk-dep
      run: |
        cd plugins/gateway/tyk/v3.2.2
        go mod edit -replace github.com/apiclarity/apiclarity/plugins/api@v0.0.0=./../api
        go mod edit -replace github.com/apiclarity/apiclarity/plugins/common@v0.0.0=./../common

    - name: Build Tyk plugin
      uses: docker/build-push-action@v2
      with:
        context: plugins
        platforms: linux/amd64 # tykio/tyk-plugin-compiler does not currently support other architectures
        tags: ghcr.io/apiclarity/tyk-plugin-v3.2.2:${{ github.sha }}
        file: plugins/Dockerfile.tyk.v3.2.2
        cache-from: type=local,src=/tmp/.buildx-cache
        cache-to: type=local,dest=/tmp/.buildx-cache

    - name: Undo Tyk Plugin API dep change
      id: undo-tyk-dep
      run: git checkout -- plugins/gateway/tyk/v3.2.2/go.mod

    - name: Build passive taper
      uses: docker/build-push-action@v2
      with:
        context: plugins
        platforms: linux/amd64,linux/arm64
        tags: ghcr.io/apiclarity/passive-taper:${{ github.sha }}
        file: plugins/Dockerfile.taper
        cache-from: type=local,src=/tmp/.buildx-cache
        cache-to: type=local,dest=/tmp/.buildx-cache
        build-args: |
          VERSION=${{ github.sha }}

  lint_chart:
    name: Lint Helm Chart
    runs-on: ubuntu-latest
    steps:

      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: "0"
          submodules: true

      - name: Replace version
        id: replace_version
        run: find . -type f -name "values.yaml" -o -name "Chart.yaml" |
          xargs sed -i -e s/latest/v1.0.0-${{ github.sha }}/g

      - name: Replace wasm filter commit id and sha256
        id: replace_wasm_filter_commit_id_for_kuma
        run: |
          WASM_COMMIT="$(git rev-parse HEAD:wasm-filters)"
          WASM_SHA256="$(sha256sum wasm-filters/bin/release/http-trace-filter.wasm | cut -d' ' -f1)"
          WASM_URI="https://raw.githubusercontent.com/openclarity/wasm-filters/${WASM_COMMIT}/bin/release/http-trace-filter.wasm"
          sed -i -e "s/sha256:.*/sha256: \"${WASM_SHA256}\"/" plugins/kuma/charts/values.yaml
          sed -i -e "s#wasmFilterURI:.*#wasmFilterURI: \"${WASM_URI}\"#" plugins/kuma/charts/values.yaml

      - name: Set up Helm
        uses: azure/setup-helm@v3.5
        with:
          version: v3.10.3

      - uses: actions/setup-python@v4.4.0
        with:
          python-version: 3.7

      - name: Set up chart-testing
        uses: helm/chart-testing-action@v2.3.1

      - name: Add Bitnami Repository
        run: helm repo add bitnami https://charts.bitnami.com/bitnami

      - name: Run chart-testing (lint)
        run: ct lint --chart-dirs charts,plugins/kuma --check-version-increment=false --validate-maintainers=false
